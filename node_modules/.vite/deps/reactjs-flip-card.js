import {
  require_react
} from "./chunk-64YSJXBX.js";
import {
  __toESM
} from "./chunk-WGAPYIUP.js";

// node_modules/reactjs-flip-card/dist/ReactFlipCard.js
var React = __toESM(require_react());
var import_react = __toESM(require_react());
import "F:/DocumentD/Ki2Nam3/DOAN/Quizlet_Real/Project/GraduateProject_FE/Base_ReactJs_Vite/node_modules/reactjs-flip-card/dist/ReactFlipCard.css";
var Direction;
(function(Direction2) {
  Direction2["vertical"] = "vertical";
  Direction2["horizontal"] = "horizontal";
  Direction2["diagonal"] = "diagonal";
})(Direction || (Direction = {}));
var FlipTrigger;
(function(FlipTrigger2) {
  FlipTrigger2["onClick"] = "onClick";
  FlipTrigger2["onHover"] = "onHover";
  FlipTrigger2["disabled"] = "disabled";
})(FlipTrigger || (FlipTrigger = {}));
function getDirectionCssClass(direction) {
  switch (direction) {
    case Direction.vertical:
      return "ReactFlipCard__rotateX180Deg";
    case Direction.horizontal:
      return "ReactFlipCard__rotateY180Deg";
    case Direction.diagonal:
      return "ReactFlipCard__rotateDiagonal";
    default:
      return "ReactFlipCard__rotateY180Deg";
  }
}
function ReactFlipCard({ containerStyle = {}, containerCss = "", flipCardStyle = {}, flipCardCss = "", frontStyle = {}, frontCss = "", backStyle = {}, backCss = "", direction = Direction.horizontal, flipTrigger = FlipTrigger.onHover, flipByProp = void 0, frontComponent = React.createElement("div", null, "Front"), backComponent = React.createElement("div", null, "Back"), onClick = () => void 0, onMouseEnter = () => void 0, onMouseLeave = () => void 0 }) {
  const [isFlipped, setIsFlipped] = (0, import_react.useState)(false);
  (0, import_react.useEffect)(() => {
    if (flipByProp !== void 0)
      setIsFlipped(flipByProp);
  }, [flipByProp]);
  return React.createElement(
    "div",
    { style: containerStyle, className: `ReactFlipCard__container ${containerCss} `, onMouseEnter: (e) => {
      if (flipTrigger === FlipTrigger.onHover) {
        setIsFlipped(!isFlipped);
      }
      onMouseEnter(e);
    }, onMouseLeave: (e) => {
      if (flipTrigger === FlipTrigger.onHover) {
        setIsFlipped(!isFlipped);
      }
      onMouseLeave(e);
    }, onClick: (e) => {
      if (flipTrigger === FlipTrigger.onClick) {
        setIsFlipped(!isFlipped);
      }
      onClick(e);
    } },
    React.createElement(
      "div",
      { className: `ReactFlipCard__flipCard ${flipCardCss} ${isFlipped ? getDirectionCssClass(direction) : ""}`, style: flipCardStyle },
      React.createElement("div", { className: `ReactFlipCard__flipCardFront ${frontCss}`, style: frontStyle }, frontComponent),
      React.createElement("div", { className: `ReactFlipCard__flipCardBack ${backCss} ${getDirectionCssClass(direction)}`, style: backStyle }, backComponent)
    )
  );
}

// node_modules/reactjs-flip-card/dist/index.js
var dist_default = ReactFlipCard;
export {
  dist_default as default
};
//# sourceMappingURL=reactjs-flip-card.js.map
